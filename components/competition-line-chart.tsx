{"data":"InVzZSBjbGllbnQiCgppbXBvcnQgeyBDYXJ0ZXNpYW5HcmlkLCBMaW5lLCBMaW5lQ2hhcnQsIFJlc3BvbnNpdmVDb250YWluZXIsIFRvb2x0aXAsIFhBeGlzLCBZQXhpcyB9IGZyb20gInJlY2hhcnRzIgoKY29uc3QgZGF0YSA9IFsKICB7IG5hbWU6ICJUcmltZXN0cmUgMSIsIHByb2Nlc29zOiAyMiwgbW9udG86IDEwMCwgcGVyY2VudGFnZTogIjAwJSIgfSwKICB7IG5hbWU6ICJUcmltZXN0cmUgMiIsIHByb2Nlc29zOiAzMywgbW9udG86IDE1MCwgcGVyY2VudGFnZTogIjAwJSIgfSwKICB7IG5hbWU6ICJUcmltZXN0cmUgMyIsIHByb2Nlc29zOiA0NSwgbW9udG86IDIwMCwgcGVyY2VudGFnZTogIjAwJSIgfSwKICB7IG5hbWU6ICJUcmltZXN0cmUgNCIsIHByb2Nlc29zOiAzMCwgbW9udG86IDEyMCwgcGVyY2VudGFnZTogIjAwJSIgfSwKXQoKY29uc3QgYWRqdWRpY2F0aW9uc0RhdGEgPSBbCiAgeyBuYW1lOiAiVHJpbWVzdHJlIDEiLCBhZGp1ZGljYWNpb25lczogMjIsIG1vbnRvOiAxMDAsIHBlcmNlbnRhZ2U6ICIwMCUiIH0sCiAgeyBuYW1lOiAiVHJpbWVzdHJlIDIiLCBhZGp1ZGljYWNpb25lczogMzMsIG1vbnRvOiAxNTAsIHBlcmNlbnRhZ2U6ICIwMCUiIH0sCiAgeyBuYW1lOiAiVHJpbWVzdHJlIDMiLCBhZGp1ZGljYWNpb25lczogNDUsIG1vbnRvOiAyMDAsIHBlcmNlbnRhZ2U6ICIwMCUiIH0sCiAgeyBuYW1lOiAiVHJpbWVzdHJlIDQiLCBhZGp1ZGljYWNpb25lczogMzAsIG1vbnRvOiAxMjAsIHBlcmNlbnRhZ2U6ICIwMCUiIH0sCl0KCmV4cG9ydCBmdW5jdGlvbiBDb21wZXRpdGlvbkxpbmVDaGFydCh7IHZhcmlhbnQgPSAicHJvY2Vzc2VzIiB9OiB7IHZhcmlhbnQ/OiAicHJvY2Vzc2VzIiB8ICJhZGp1ZGljYXRpb25zIiB9KSB7CiAgY29uc3QgY2hhcnREYXRhID0gdmFyaWFudCA9PT0gImFkanVkaWNhdGlvbnMiID8gYWRqdWRpY2F0aW9uc0RhdGEgOiBkYXRhCgogIHJldHVybiAoCiAgICA8ZGl2IGNsYXNzTmFtZT0iaC1bMzAwcHhdIHctZnVsbCI+CiAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBnYXAtOCBtYi00Ij4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIiPgogICAgICAgICAgPGRpdiBjbGFzc05hbWU9InctNCBoLTQgYmctWyM0Qjg1OEVdIG1yLTIiPjwvZGl2PgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LVsjOTk5OTk5XSB0ZXh0LVsxMnB4XSI+CiAgICAgICAgICAgIHt2YXJpYW50ID09PSAiYWRqdWRpY2F0aW9ucyIgPyAiQWRqdWRpY2FjaW9uZXMiIDogIlByb2Nlc29zIn0KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIiPgogICAgICAgICAgPGRpdiBjbGFzc05hbWU9InctNCBoLTQgYmctWyM4MDkzRENdIG1yLTIiPjwvZGl2PgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LVsjOTk5OTk5XSB0ZXh0LVsxMnB4XSI+TW9udG88L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8UmVzcG9uc2l2ZUNvbnRhaW5lciB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI5MCUiPgogICAgICAgIDxMaW5lQ2hhcnQgZGF0YT17Y2hhcnREYXRhfSBtYXJnaW49e3sgdG9wOiA1LCByaWdodDogMTAsIGxlZnQ6IDEwLCBib3R0b206IDAgfX0+CiAgICAgICAgICA8Q2FydGVzaWFuR3JpZCBzdHJva2VEYXNoYXJyYXk9IjUgNSIgc3Ryb2tlPSIjRTZFNkU2IiBzdHJva2VPcGFjaXR5PXswLjd9IC8+CiAgICAgICAgICA8WEF4aXMKICAgICAgICAgICAgZGF0YUtleT0ibmFtZSIKICAgICAgICAgICAgYXhpc0xpbmU9e3sgc3Ryb2tlOiAiI0U2RTZFNiIsIHN0cm9rZVdpZHRoOiAxIH19CiAgICAgICAgICAgIHRpY2tMaW5lPXtmYWxzZX0KICAgICAgICAgICAgZm9udFNpemU9ezExfQogICAgICAgICAgICBkeT17MTB9CiAgICAgICAgICAgIHRpY2s9e3sgZmlsbDogIiM3MTcxN0EiIH19CiAgICAgICAgICAvPgogICAgICAgICAgPFlBeGlzCiAgICAgICAgICAgIGF4aXNMaW5lPXt7IHN0cm9rZTogIiNFNkU2RTYiLCBzdHJva2VXaWR0aDogMSB9fQogICAgICAgICAgICB0aWNrTGluZT17ZmFsc2V9CiAgICAgICAgICAgIGZvbnRTaXplPXsxMX0KICAgICAgICAgICAgZHg9ey0xMH0KICAgICAgICAgICAgdGljaz17eyBmaWxsOiAiIzcxNzE3QSIgfX0KICAgICAgICAgICAgdGlja0Zvcm1hdHRlcj17KHZhbHVlKSA9PiBgJHt2YWx1ZX1gfQogICAgICAgICAgLz4KICAgICAgICAgIDxUb29sdGlwCiAgICAgICAgICAgIGNvbnRlbnQ9eyh7IGFjdGl2ZSwgcGF5bG9hZCB9KSA9PiB7CiAgICAgICAgICAgICAgaWYgKGFjdGl2ZSAmJiBwYXlsb2FkICYmIHBheWxvYWQubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gKAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0icm91bmRlZC1sZyBib3JkZXIgYmctYmFja2dyb3VuZCBwLTIgc2hhZG93LXNtIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZ3JpZCBncmlkLWNvbHMtMiBnYXAtMiI+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBmbGV4LWNvbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC14cyB1cHBlcmNhc2UgdGV4dC1bIzcxNzE3QV0iPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt2YXJpYW50ID09PSAiYWRqdWRpY2F0aW9ucyIgPyAiQWRqdWRpY2FjaW9uZXMiIDogIlByb2Nlc29zIn0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9ImZvbnQtYm9sZCB0ZXh0LVsjNzE3MTdBXSI+e3BheWxvYWRbMF0udmFsdWV9PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBmbGV4LWNvbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC14cyB1cHBlcmNhc2UgdGV4dC1bIzcxNzE3QV0iPk1vbnRvPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9ImZvbnQtYm9sZCB0ZXh0LVsjNzE3MTdBXSI+e3BheWxvYWRbMV0udmFsdWV9PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICByZXR1cm4gbnVsbAogICAgICAgICAgICB9fQogICAgICAgICAgLz4KICAgICAgICAgIDxMaW5lCiAgICAgICAgICAgIHR5cGU9Im1vbm90b25lIgogICAgICAgICAgICBuYW1lPXt2YXJpYW50ID09PSAiYWRqdWRpY2F0aW9ucyIgPyAiQWRqdWRpY2FjaW9uZXMiIDogIlByb2Nlc29zIn0KICAgICAgICAgICAgZGF0YUtleT17dmFyaWFudCA9PT0gImFkanVkaWNhdGlvbnMiID8gImFkanVkaWNhY2lvbmVzIiA6ICJwcm9jZXNvcyJ9CiAgICAgICAgICAgIHN0cm9rZVdpZHRoPXsyfQogICAgICAgICAgICBhY3RpdmVEb3Q9e3sKICAgICAgICAgICAgICByOiA2LAogICAgICAgICAgICAgIHN0eWxlOiB7IGZpbGw6ICIjNEI4NThFIiwgb3BhY2l0eTogMC44IH0sCiAgICAgICAgICAgIH19CiAgICAgICAgICAgIHN0eWxlPXt7CiAgICAgICAgICAgICAgc3Ryb2tlOiAiIzRCODU4RSIsCiAgICAgICAgICAgIH19CiAgICAgICAgICAgIGRvdD17eyBmaWxsOiAiIzRCODU4RSIsIHI6IDQgfX0KICAgICAgICAgIC8+CiAgICAgICAgICA8TGluZQogICAgICAgICAgICB0eXBlPSJtb25vdG9uZSIKICAgICAgICAgICAgbmFtZT0iTW9udG8iCiAgICAgICAgICAgIGRhdGFLZXk9Im1vbnRvIgogICAgICAgICAgICBzdHJva2VXaWR0aD17Mn0KICAgICAgICAgICAgYWN0aXZlRG90PXt7CiAgICAgICAgICAgICAgcjogNiwKICAgICAgICAgICAgICBzdHlsZTogeyBmaWxsOiAiIzgwOTNEQyIsIG9wYWNpdHk6IDAuOCB9LAogICAgICAgICAgICB9fQogICAgICAgICAgICBzdHlsZT17ewogICAgICAgICAgICAgIHN0cm9rZTogIiM4MDkzREMiLAogICAgICAgICAgICB9fQogICAgICAgICAgICBkb3Q9e3sgZmlsbDogIiM4MDkzREMiLCByOiA0IH19CiAgICAgICAgICAvPgogICAgICAgIDwvTGluZUNoYXJ0PgogICAgICA8L1Jlc3BvbnNpdmVDb250YWluZXI+CiAgICA8L2Rpdj4KICApCn0K"}